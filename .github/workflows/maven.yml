name: CI
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches:
      - main

jobs:
  build-test-package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build App1
        working-directory: lesson26/app_jenkins
        run: mvn -B -DskipTests clean package

      - name: Build App2
        working-directory: lesson26/app_devops
        run: mvn -B -DskipTests clean package

      - name: Build App3
        working-directory: lesson26/app_world
        run: mvn -B -DskipTests clean package

      - name: Test App1
        working-directory: lesson26/app_jenkins
        run: mvn test

      - name: Test App2
        working-directory: lesson26/app_devops
        run: mvn test

      - name: Test App3
        working-directory: lesson26/app_world
        run: mvn test

      - name: Save artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-artifact
          path: |
            lesson26/app_jenkins/target/
            lesson26/app_devops/target/
            lesson26/app_world/target/
 

  build-docker-image:
    needs: build-test-package
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log into the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for the Docker image
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
  
      - name: Build and push the Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}





